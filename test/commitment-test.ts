import * as BN from 'bn.js'
import * as cryptoJS from "crypto-js"
import {Hex, UrlBase64, CryptoJSBytes} from "@safeheron/crypto-utils"
import * as assert from "assert"
import {HashCommitment} from ".."

describe('Commitment', function () {
  function test (Cls, cases) {
    for (var i = 0; i < cases.length; i++) {
      var msg = new BN(cases[i][0], 10)
      var blind = new BN(cases[i][1], 10)
      var expectedCom = new BN(cases[i][2], 10)
      console.log('msg:', msg.toString(16))
      console.log('blind:', blind.toString(16))
      console.log('expectedCom:', expectedCom.toString(16))
      var com = Cls.createComWithBlind(msg, blind)
      console.log(expectedCom.toString(16))
      console.log(com.toString(16))
      assert.strictEqual(com.eq(expectedCom), true)
    }
  }

  it('it should support HashCommitment!', function () {
    test(HashCommitment, [
       ['97324513931665327983910040089283784409389314232230480988378402393871690930585',
        '61630392401948106105179362333906431572040870001829469719032882728467924668429',
        '16875086368045186523530779402610682073770440290332351815832659472313617226983']
    ])
    test(HashCommitment, [
       ['37766970781068149112324490047246326958707480064810067320919717905812189553782',
        '87437415445315123086589186219427784615515935634828667694427006204170347149112',
        '63538315397362983612677204157359500547432845574595475097395661032286085632540']
    ])

    test(HashCommitment, [
       ['11192362323285744283737836177809189142531772505097074520546094076930606460332',
        '111653838366360487481835811903513239223585768596857413324011192852728678990538',
        '62903019274035410926594435298325037858700675593174005498071792308120047119620']
    ])
    test(HashCommitment, [
       ['61970329949386588674299848786992462324404395702842176084811618183396590694538',
        '99631744784241709736675230791933400110955174977247833326649390863167168535705',
        '20622945756791018579159639080460812843211226043796664693830581750391652093270']
    ])
    test(HashCommitment, [
       ['15590167763797024468280193621718759187613299897346910505191377741232748641110',
        '110785657507576102167703083091150736873278163393410850899482690882536483335247',
        '82024698199722552975917992650826227404531798793030823408192168843424338397087']
    ])
    test(HashCommitment, [
       ['16694243051757274412097926015470432135128463024727134084444271586757389660595',
        '8879444054003147557243685756973151643605808165508871339565351995636896492960',
        '23797970337287786105794761693008027674868367019438638575184369620910145179436']
    ])
    test(HashCommitment, [
       ['109571225896274701924904553509248614272762315845470439658508036477984363192397',
        '6049918560703268403214313367760819724095519407264740793245251527317520201760',
        '30812445372729624544949156640629491825255574989792468168762098277001172942222']
    ])
    test(HashCommitment, [
       ['55185043148424321336497501580427887013346329086187382187138724985550103618819',
        '45629413522541647837220727844859928059690031649531560855993216862054297008716',
        '105027117453645569564085807876777754462037755596917196559776550998686967977035']
    ])
    test(HashCommitment, [
       ['20233554683580607197748370843796452449011917604520149139375536690335106525362',
        '34056646362283838714036210234960404512391998156968956031297241276509576008782',
        '58646980350062412730768279759612006174967914713676150300277003966619214600731']
    ])
  })
})
